name: build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

env:
  PYTHONUNBUFFERED: "1"
  PYTHON_VERSION: "3.10"

jobs:
  linux:
    name: Build distribution for Linux
    runs-on: ubuntu-22.04

    env:
      TARGET_TRIPLE: "x86_64-unknown-linux-gnu"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Rust target
      run: rustup target add ${{ env.TARGET_TRIPLE }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Build distribution
      run: hatch run build:release --target-triple ${{ env.TARGET_TRIPLE }} --var version $(hatch version)

    - name: Setup distribution artifact directory
      run: |
        mv app/build/${{ env.TARGET_TRIPLE }}/release targets
        mv targets/install targets/${{ env.TARGET_TRIPLE }}

    - name: Strip binary and set executable bit
      run: |
        strip targets/${{ env.TARGET_TRIPLE }}/ddqa
        chmod +x targets/${{ env.TARGET_TRIPLE }}/ddqa

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: targets
        if-no-files-found: error

  windows:
    name: Build distribution for Windows
    runs-on: windows-2022

    env:
      TARGET_TRIPLE: "x86_64-pc-windows-msvc"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Build MSI
      run: hatch run build:msi --target-triple ${{ env.TARGET_TRIPLE }} --var version $(hatch version)

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: app/build/${{ env.TARGET_TRIPLE }}/release/msi/*.msi
        if-no-files-found: error

  macos-intel:
    name: Build distribution for macOS Intel
    runs-on: macos-11

    env:
      TARGET_TRIPLE: "x86_64-apple-darwin"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Rust target
      run: rustup target add ${{ env.TARGET_TRIPLE }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Build distribution
      run: hatch run build:release --target-triple ${{ env.TARGET_TRIPLE }} --var version $(hatch version)

    - name: Setup distribution artifact directory
      run: |
        mv app/build/${{ env.TARGET_TRIPLE }}/release targets
        mv targets/install targets/${{ env.TARGET_TRIPLE }}

    - name: Strip binary and set executable bit
      run: |
        strip targets/${{ env.TARGET_TRIPLE }}/ddqa
        chmod +x targets/${{ env.TARGET_TRIPLE }}/ddqa

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: targets
        if-no-files-found: error

  macos-arm:
    name: Build distribution for macOS ARM
    runs-on: macos-12

    env:
      TARGET_TRIPLE: "aarch64-apple-darwin"

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - name: Install Rust target
      run: rustup target add ${{ env.TARGET_TRIPLE }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Build distribution
      run: hatch run build:release --target-triple ${{ env.TARGET_TRIPLE }} --var version $(hatch version)

    - name: Setup distribution artifact directory
      run: |
        mv app/build/${{ env.TARGET_TRIPLE }}/release targets
        mv targets/install targets/${{ env.TARGET_TRIPLE }}

    - name: Strip binary and set executable bit
      run: |
        strip targets/${{ env.TARGET_TRIPLE }}/ddqa
        chmod +x targets/${{ env.TARGET_TRIPLE }}/ddqa

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: targets
        if-no-files-found: error
