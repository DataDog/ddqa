name: build

on:
  push:
    branches:
    - master
  pull_request:
    branches:
    - master

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

env:
  PYTHONUNBUFFERED: "1"
  FORCE_COLOR: "1"
  PYTHON_VERSION: "3.10"

jobs:
  run:
    name: Build distribution for ${{ matrix.target == 'aarch64-apple-darwin' && 'macOS M1' || startsWith(matrix.os, 'macos-') && 'macOS Intel' || startsWith(matrix.os, 'windows-') && 'Windows' || 'Linux' }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
        - os: ubuntu-22.04
          target: x86_64-unknown-linux-gnu
        - os: windows-2022
          target: x86_64-pc-windows-msvc
        - os: macos-10.15
          target: x86_64-apple-darwin
        - os: macos-12
          target: aarch64-apple-darwin

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ env.PYTHON_VERSION }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ env.PYTHON_VERSION }}

    - if: runner.os != 'Windows'
      name: Install Rust target
      run: rustup target add ${{ matrix.target }}

    - name: Install Hatch
      run: pip install --upgrade hatch

    - name: Set up environment
      run: hatch run build:setup

    - name: Build distribution
      run: hatch run build:release --target-triple ${{ matrix.target }}

    - name: Setup distribution artifact directory
      run: |
        mv app/build/${{ matrix.target }}/release targets
        mv targets/install targets/${{ matrix.target }}

    - if: runner.os == 'Windows'
      name: Build MSI
      run: hatch run build:msi --target-triple ${{ matrix.target }}

    - if: runner.os == 'Windows'
      name: Setup MSI artifact
      run: mv app/build/${{ matrix.target }}/release/msi_installer/*.msi targets

    - if: runner.os != 'Windows'
      name: Strip binary and set executable bit
      run: |
        strip targets/${{ matrix.target }}/ddqa
        chmod +x targets/${{ matrix.target }}/ddqa

    - uses: actions/upload-artifact@v3
      with:
        name: artifacts
        path: targets
        if-no-files-found: error
